x-rails: &rails
  build: &build
    context: .
    dockerfile: Dockerfile
  environment: &env
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    REDIS_URL: redis://redis:6379/
  tmpfs:
    - /tmp
  depends_on: &deps
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

x-dev: &dev
  volumes:
    - .:/usr/src:cached
    - bundle:/usr/src/.bundle
    - rails_cache:/usr/src/tmp/cache

services:
  rails-prod:
    <<: *rails
    environment:
      <<: *env
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
    ports:
      - "5000:3000"
    profiles:
      - prod

  rails-dev:
    <<: *rails
    <<: *dev
    environment:
      <<: *env
      RAILS_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      <<: *deps
      vite-dev:
        condition: service_healthy

  resque:
    <<: *rails
    <<: *dev
    environment:
      <<: *env
      RAILS_ENV: development
      QUEUE: "*"
    command: bin/rake resque:work

  vite-dev:
    build:
      context: ./frontend
      target: dev
    volumes:
      - ./frontend:/opt/friday/src
      - ./frontend/package.json:/opt/friday/package.json
      - ./frontend/package-lock.json:/opt/friday/package-lock.json
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "-O/dev/null", "http://localhost:4000/@vite/client"]
      interval: 5s

  postgres:
    image: postgres:13
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  bundle:
  postgres:
  rails_cache:
  redis:
